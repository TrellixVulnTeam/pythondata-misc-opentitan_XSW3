import os.path
__dir__ = os.path.split(os.path.abspath(os.path.realpath(__file__)))[0]
data_location = os.path.join(__dir__, "resources")
src = "https://github.com/lowRISC/opentitan"

# Module version
version_str = "0.0.post5022"
version_tuple = (0, 0, 5022)
try:
    from packaging.version import Version as V
    pversion = V("0.0.post5022")
except ImportError:
    pass

# Data version info
data_version_str = "0.0.post4931"
data_version_tuple = (0, 0, 4931)
try:
    from packaging.version import Version as V
    pdata_version = V("0.0.post4931")
except ImportError:
    pass
data_git_hash = "01ec7cf8eb4167983fda46dac66c59ed84d8a31f"
data_git_describe = "v0.0-4931-g01ec7cf8e"
data_git_msg = """\
commit 01ec7cf8eb4167983fda46dac66c59ed84d8a31f
Author: Tobias Wölfel <tobias.woelfel@mailbox.org>
Date:   Fri Feb 12 11:57:12 2021 +0100

    [sw] Update source documentation
    
    Fixes mostly spelling errors and outdated parameters.
    Based on the warnings generated by Doxygen.
    
    Signed-off-by: Tobias Wölfel <tobias.woelfel@mailbox.org>

"""

# Tool version info
tool_version_str = "0.0.post91"
tool_version_tuple = (0, 0, 91)
try:
    from packaging.version import Version as V
    ptool_version = V("0.0.post91")
except ImportError:
    pass


def data_file(f):
    """Get absolute path for file inside pythondata_misc_opentitan."""
    fn = os.path.join(data_location, f)
    fn = os.path.abspath(fn)
    if not os.path.exists(fn):
        raise IOError("File {f} doesn't exist in pythondata_misc_opentitan".format(f))
    return fn
