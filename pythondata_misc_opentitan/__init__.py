import os.path
__dir__ = os.path.split(os.path.abspath(os.path.realpath(__file__)))[0]
data_location = os.path.join(__dir__, "resources")
src = "https://github.com/lowRISC/opentitan"

# Module version
version_str = "0.0.post5087"
version_tuple = (0, 0, 5087)
try:
    from packaging.version import Version as V
    pversion = V("0.0.post5087")
except ImportError:
    pass

# Data version info
data_version_str = "0.0.post4996"
data_version_tuple = (0, 0, 4996)
try:
    from packaging.version import Version as V
    pdata_version = V("0.0.post4996")
except ImportError:
    pass
data_git_hash = "15912f5664a785d79ce490e66a3f4739d4b0c128"
data_git_describe = "v0.0-4996-g15912f566"
data_git_msg = """\
commit 15912f5664a785d79ce490e66a3f4739d4b0c128
Author: Michael Schaffner <msf@opentitan.org>
Date:   Fri Jan 29 18:24:37 2021 -0800

    [Verible/FPV] Workaround that excludes CSR FPV files in Verible runs
    
    The autogenerated CSR FPV assertions contain constructs that Verible
    does not yet understand.
    Verible then throws syntax errors that break our lint flow.
    Unfortunately, these syntax errors cannot easily be waived, and the
    issue needs to be addressed upstream, see
    https://github.com/google/verible/issues/652
    
    In the meantime, this commit introduces a workaround that excludes the
    offending files from Verible lint runs.
    
    Signed-off-by: Michael Schaffner <msf@opentitan.org>

"""

# Tool version info
tool_version_str = "0.0.post91"
tool_version_tuple = (0, 0, 91)
try:
    from packaging.version import Version as V
    ptool_version = V("0.0.post91")
except ImportError:
    pass


def data_file(f):
    """Get absolute path for file inside pythondata_misc_opentitan."""
    fn = os.path.join(data_location, f)
    fn = os.path.abspath(fn)
    if not os.path.exists(fn):
        raise IOError("File {f} doesn't exist in pythondata_misc_opentitan".format(f))
    return fn
