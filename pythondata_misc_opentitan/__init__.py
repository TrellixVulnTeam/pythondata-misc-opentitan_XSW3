import os.path
__dir__ = os.path.split(os.path.abspath(os.path.realpath(__file__)))[0]
data_location = os.path.join(__dir__, "resources")
src = "https://github.com/lowRISC/opentitan"

# Module version
version_str = "0.0.post8460"
version_tuple = (0, 0, 8460)
try:
    from packaging.version import Version as V
    pversion = V("0.0.post8460")
except ImportError:
    pass

# Data version info
data_version_str = "0.0.post8348"
data_version_tuple = (0, 0, 8348)
try:
    from packaging.version import Version as V
    pdata_version = V("0.0.post8348")
except ImportError:
    pass
data_git_hash = "718b2a01aaa5507d590c05fa1fd6576ecc131443"
data_git_describe = "v0.0-8348-g718b2a01a"
data_git_msg = """\
commit 718b2a01aaa5507d590c05fa1fd6576ecc131443
Author: Guillermo Maturana <maturana@google.com>
Date:   Wed Oct 13 11:44:47 2021 -0700

    [dv/asic] Create main power glitch test
    
    Add interface that drives some AST inputs tied to 1, including vcmain_supp_i
    and vcaon_supp_i.
    Create C code to handle two resets, the second being due to the power glitch
    generated by the DV code in response to the `core_sleeping` rising because
    of a wait_for_interrupt instruction.
    
    Signed-off-by: Guillermo Maturana <maturana@google.com>

"""

# Tool version info
tool_version_str = "0.0.post112"
tool_version_tuple = (0, 0, 112)
try:
    from packaging.version import Version as V
    ptool_version = V("0.0.post112")
except ImportError:
    pass


def data_file(f):
    """Get absolute path for file inside pythondata_misc_opentitan."""
    fn = os.path.join(data_location, f)
    fn = os.path.abspath(fn)
    if not os.path.exists(fn):
        raise IOError("File {f} doesn't exist in pythondata_misc_opentitan".format(f))
    return fn
