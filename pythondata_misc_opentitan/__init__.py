import os.path
__dir__ = os.path.split(os.path.abspath(os.path.realpath(__file__)))[0]
data_location = os.path.join(__dir__, "resources")
src = "https://github.com/lowRISC/opentitan"

# Module version
version_str = "0.0.post8271"
version_tuple = (0, 0, 8271)
try:
    from packaging.version import Version as V
    pversion = V("0.0.post8271")
except ImportError:
    pass

# Data version info
data_version_str = "0.0.post8159"
data_version_tuple = (0, 0, 8159)
try:
    from packaging.version import Version as V
    pdata_version = V("0.0.post8159")
except ImportError:
    pass
data_git_hash = "1adb82f110347d740f7b31b84f103f1d2be05c3d"
data_git_describe = "v0.0-8159-g1adb82f11"
data_git_msg = """\
commit 1adb82f110347d740f7b31b84f103f1d2be05c3d
Author: Drew Macrae <drewmacrae@google.com>
Date:   Thu Oct 7 17:53:15 2021 +0000

    [bazel] fixup bazel rules for autogen targets
    
    * rv_plic autogen moved relevant hjson targets which need a new
    rule to build.
    * many of the difs got new autogenerated code files.
    * edn got a unit test
    
    Signed-off-by: Drew Macrae <drewmacrae@google.com>

"""

# Tool version info
tool_version_str = "0.0.post112"
tool_version_tuple = (0, 0, 112)
try:
    from packaging.version import Version as V
    ptool_version = V("0.0.post112")
except ImportError:
    pass


def data_file(f):
    """Get absolute path for file inside pythondata_misc_opentitan."""
    fn = os.path.join(data_location, f)
    fn = os.path.abspath(fn)
    if not os.path.exists(fn):
        raise IOError("File {f} doesn't exist in pythondata_misc_opentitan".format(f))
    return fn
