import os.path
__dir__ = os.path.split(os.path.abspath(os.path.realpath(__file__)))[0]
data_location = os.path.join(__dir__, "resources")
src = "https://github.com/lowRISC/opentitan"

# Module version
version_str = "0.0.post11189"
version_tuple = (0, 0, 11189)
try:
    from packaging.version import Version as V
    pversion = V("0.0.post11189")
except ImportError:
    pass

# Data version info
data_version_str = "0.0.post11063"
data_version_tuple = (0, 0, 11063)
try:
    from packaging.version import Version as V
    pdata_version = V("0.0.post11063")
except ImportError:
    pass
data_git_hash = "edee59847948c7134660662b816f48f77868ec1d"
data_git_describe = "v0.0-11063-gedee59847"
data_git_msg = """\
commit edee59847948c7134660662b816f48f77868ec1d
Author: Cindy Chen <chencindy@opentitan.org>
Date:   Tue Mar 29 16:10:52 2022 -0700

    [dv/cov] fpv_csr_assert only collect assertion coverage
    
    This PR updates coverage collection files for both VCS and Xcelium to
    only collect assertion coverage for autogenerated fpv_csr_assert file.
    Because there might be redundant logic inside this auto-generated file,
    thus only assertion coverages are meaningful to collect.
    
    Signed-off-by: Cindy Chen <chencindy@opentitan.org>

"""

# Tool version info
tool_version_str = "0.0.post126"
tool_version_tuple = (0, 0, 126)
try:
    from packaging.version import Version as V
    ptool_version = V("0.0.post126")
except ImportError:
    pass


def data_file(f):
    """Get absolute path for file inside pythondata_misc_opentitan."""
    fn = os.path.join(data_location, f)
    fn = os.path.abspath(fn)
    if not os.path.exists(fn):
        raise IOError("File {f} doesn't exist in pythondata_misc_opentitan".format(f))
    return fn
