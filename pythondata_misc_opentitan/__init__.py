import os.path
__dir__ = os.path.split(os.path.abspath(os.path.realpath(__file__)))[0]
data_location = os.path.join(__dir__, "resources")
src = "https://github.com/lowRISC/opentitan"

# Module version
version_str = "0.0.post10207"
version_tuple = (0, 0, 10207)
try:
    from packaging.version import Version as V
    pversion = V("0.0.post10207")
except ImportError:
    pass

# Data version info
data_version_str = "0.0.post10083"
data_version_tuple = (0, 0, 10083)
try:
    from packaging.version import Version as V
    pdata_version = V("0.0.post10083")
except ImportError:
    pass
data_git_hash = "58c1f88aedea6ea33439892f1cd2325489fa01c6"
data_git_describe = "v0.0-10083-g58c1f88ae"
data_git_msg = """\
commit 58c1f88aedea6ea33439892f1cd2325489fa01c6
Author: Srikrishna Iyer <sriyer@google.com>
Date:   Tue Feb 8 21:17:20 2022 -0800

    [checklists] Update V2S checklists
    
    This PR adds 2 checklist items to V2S. The first,
    `SEC_CM_TESTPLAN_COMPLETED` ensures that the DV engineer has updated
    their testplan to account for the verication of security countermeasures
    in the design. This is typically just importing the security
    countermeasures testplan autogenerated by the reggen tool. This should
    be already done for all IPs whose DV effort has already begun.
    
    The second, `SEC_CM_DV_REVIEWED` ensures that a review step if deemed
    necessary, has been done. This can be waived for most blocks.
    
    Signed-off-by: Srikrishna Iyer <sriyer@google.com>

"""

# Tool version info
tool_version_str = "0.0.post124"
tool_version_tuple = (0, 0, 124)
try:
    from packaging.version import Version as V
    ptool_version = V("0.0.post124")
except ImportError:
    pass


def data_file(f):
    """Get absolute path for file inside pythondata_misc_opentitan."""
    fn = os.path.join(data_location, f)
    fn = os.path.abspath(fn)
    if not os.path.exists(fn):
        raise IOError("File {f} doesn't exist in pythondata_misc_opentitan".format(f))
    return fn
