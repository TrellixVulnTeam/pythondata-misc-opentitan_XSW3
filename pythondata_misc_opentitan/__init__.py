import os.path
__dir__ = os.path.split(os.path.abspath(os.path.realpath(__file__)))[0]
data_location = os.path.join(__dir__, "resources")
src = "https://github.com/lowRISC/opentitan"

# Module version
version_str = "0.0.post14818"
version_tuple = (0, 0, 14818)
try:
    from packaging.version import Version as V
    pversion = V("0.0.post14818")
except ImportError:
    pass

# Data version info
data_version_str = "0.0.post14676"
data_version_tuple = (0, 0, 14676)
try:
    from packaging.version import Version as V
    pdata_version = V("0.0.post14676")
except ImportError:
    pass
data_git_hash = "611d56f934a36991b1a61b46690243373e6806fe"
data_git_describe = "v0.0-14676-g611d56f934"
data_git_msg = """\
commit 611d56f934a36991b1a61b46690243373e6806fe
Author: Martin Lueker-Boden <martin.lueker-boden@wdc.com>
Date:   Mon Oct 17 04:50:47 2022 -0700

    [entropy_src/dv] Update coverage for interrupts
    
    This commit implements coverage sampling in the entropy_src scoreboard.
    
    The `cov.intr_cg` covergroup is used only for functional interrupts, not
    those driven by the `intr_test` register.  CSR driven interrupts are
    sampled exclusively in `cov.intr_test_cg`.  Furthermore, in order to
    prevent confusion between the two, if the `intr_test` CSR
    register is used at any point in a test, it is assumed that all
    pending interrupts are related to the CSR-driven test, and the `intr_cg`
    (for functional interrupts) will not be sampled until a reset).
    
    The `cov.intr_pins_cg` covergroup is sampled whenever an event is seen
    at the DUT interrupt pins, regardless of whether the test originated
    from the CSR or from a functional event.
    
    The `entropy_src_intr` test is easily confused with the autogenerated
    CSR-based `entropy_src_intr_test`.  This test is meant to provide
    additional coverage for events not generated by the other tests.
    Currently the `entropy_src_rng` and `entropy_src_fw_ov` covergroups are
    capable of providing full coverage of functional interrupts.  Before the
    `entropy_src_intr` test can be applied in this fashion however it would
    need to be updated to support scoreboarding. (It also needs some
    maintainance at this time as it is frequently failing). Rather than
    provide this maintainance at this time, responsibility for the interrupt
    test points is relegated to the general `entropy_src_rng` and
    `entropy_src_fw_ov` tests.
    
    Signed-off-by: Martin Lueker-Boden <martin.lueker-boden@wdc.com>

"""

# Tool version info
tool_version_str = "0.0.post142"
tool_version_tuple = (0, 0, 142)
try:
    from packaging.version import Version as V
    ptool_version = V("0.0.post142")
except ImportError:
    pass


def data_file(f):
    """Get absolute path for file inside pythondata_misc_opentitan."""
    fn = os.path.join(data_location, f)
    fn = os.path.abspath(fn)
    if not os.path.exists(fn):
        raise IOError("File {f} doesn't exist in pythondata_misc_opentitan".format(f))
    return fn
