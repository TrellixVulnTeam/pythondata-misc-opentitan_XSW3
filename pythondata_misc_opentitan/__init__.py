import os.path
__dir__ = os.path.split(os.path.abspath(os.path.realpath(__file__)))[0]
data_location = os.path.join(__dir__, "resources")
src = "https://github.com/lowRISC/opentitan"

# Module version
version_str = "0.0.post8787"
version_tuple = (0, 0, 8787)
try:
    from packaging.version import Version as V
    pversion = V("0.0.post8787")
except ImportError:
    pass

# Data version info
data_version_str = "0.0.post8675"
data_version_tuple = (0, 0, 8675)
try:
    from packaging.version import Version as V
    pdata_version = V("0.0.post8675")
except ImportError:
    pass
data_git_hash = "bef8e3cca58676e412fa7c2d3fd4ab8d564a0ee0"
data_git_describe = "v0.0-8675-gbef8e3cca"
data_git_msg = """\
commit bef8e3cca58676e412fa7c2d3fd4ab8d564a0ee0
Author: Alphan Ulusoy <alphan@google.com>
Date:   Fri Nov 19 09:34:01 2021 -0500

    [dif] Fix autogenerated init unit tests
    
    Signed-off-by: Alphan Ulusoy <alphan@google.com>

"""

# Tool version info
tool_version_str = "0.0.post112"
tool_version_tuple = (0, 0, 112)
try:
    from packaging.version import Version as V
    ptool_version = V("0.0.post112")
except ImportError:
    pass


def data_file(f):
    """Get absolute path for file inside pythondata_misc_opentitan."""
    fn = os.path.join(data_location, f)
    fn = os.path.abspath(fn)
    if not os.path.exists(fn):
        raise IOError("File {f} doesn't exist in pythondata_misc_opentitan".format(f))
    return fn
