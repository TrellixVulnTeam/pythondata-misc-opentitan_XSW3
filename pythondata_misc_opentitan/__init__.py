import os.path
__dir__ = os.path.split(os.path.abspath(os.path.realpath(__file__)))[0]
data_location = os.path.join(__dir__, "resources")
src = "https://github.com/lowRISC/opentitan"

# Module version
version_str = "0.0.post8270"
version_tuple = (0, 0, 8270)
try:
    from packaging.version import Version as V
    pversion = V("0.0.post8270")
except ImportError:
    pass

# Data version info
data_version_str = "0.0.post8158"
data_version_tuple = (0, 0, 8158)
try:
    from packaging.version import Version as V
    pdata_version = V("0.0.post8158")
except ImportError:
    pass
data_git_hash = "09568b86943eca1e522ca2e7430b69ea033d3a7d"
data_git_describe = "v0.0-8158-g09568b869"
data_git_msg = """\
commit 09568b86943eca1e522ca2e7430b69ea033d3a7d
Author: Prajwala Puttappa <prajwalaputtappa@lowrisc.org>
Date:   Fri Oct 8 16:55:08 2021 +0100

    [otbn,dv] Move run method from OTBNSim to new StandaloneSim.
    
    The following additions/ modifications are done in this commit:
    1. standalonesim.py: It is a new file added in current commit. It
    includes the run function previously present in sim.py. It is required
    to run the standalone otbn sims.
    2. sim.py: The run function was moved from sim.py to standaloneaim.py
    3. standalone.py: Type of sim class was changed from OTBNSim to
    StandaloneSim.
    4. simple_test.py: Following two changes are present -
       1. test_count now runs standalone instead of stepped.
       This change was done because there is no run function in OTBNSim class
       anymore.
       2. get_reg_dump function is updated to read ERR_BITS and INSN_CNT
       from the dumps generated by standalone.py
    
    Signed-off-by: Prajwala Puttappa <prajwalaputtappa@lowrisc.org>

"""

# Tool version info
tool_version_str = "0.0.post112"
tool_version_tuple = (0, 0, 112)
try:
    from packaging.version import Version as V
    ptool_version = V("0.0.post112")
except ImportError:
    pass


def data_file(f):
    """Get absolute path for file inside pythondata_misc_opentitan."""
    fn = os.path.join(data_location, f)
    fn = os.path.abspath(fn)
    if not os.path.exists(fn):
        raise IOError("File {f} doesn't exist in pythondata_misc_opentitan".format(f))
    return fn
