import os.path
__dir__ = os.path.split(os.path.abspath(os.path.realpath(__file__)))[0]
data_location = os.path.join(__dir__, "resources")
src = "https://github.com/lowRISC/opentitan"

# Module version
version_str = "0.0.post15011"
version_tuple = (0, 0, 15011)
try:
    from packaging.version import Version as V
    pversion = V("0.0.post15011")
except ImportError:
    pass

# Data version info
data_version_str = "0.0.post14869"
data_version_tuple = (0, 0, 14869)
try:
    from packaging.version import Version as V
    pdata_version = V("0.0.post14869")
except ImportError:
    pass
data_git_hash = "3e24ee24e6dcac0dbf972882bfc2456bc95ca983"
data_git_describe = "v0.0-14869-g3e24ee24e6"
data_git_msg = """\
commit 3e24ee24e6dcac0dbf972882bfc2456bc95ca983
Author: Dan McArdle <dmcardle@google.com>
Date:   Thu Oct 27 12:09:00 2022 -0400

    [bazel] Unconditionally add tests to opentitan_functest test suites
    
    When the list of tests passed to test_suite() is empty, it defaults to
    all non-manual tests in the BUILD file [0].
    
    Because opentitan_functest() has been excluding manual tests from the
    test_suite it generates, it was possible to accidentally trigger this
    special case of test_suite(). Consequently, :e2e_bootup_success_otp_dev
    depended on every test in //sw/device/silicon_creator/rom/e2e instead of
    the tests generated by this one call to opentitan_functest()!
    
    [0]: https://bazel.build/reference/be/general#test_suite
    
    Signed-off-by: Dan McArdle <dmcardle@google.com>

"""

# Tool version info
tool_version_str = "0.0.post142"
tool_version_tuple = (0, 0, 142)
try:
    from packaging.version import Version as V
    ptool_version = V("0.0.post142")
except ImportError:
    pass


def data_file(f):
    """Get absolute path for file inside pythondata_misc_opentitan."""
    fn = os.path.join(data_location, f)
    fn = os.path.abspath(fn)
    if not os.path.exists(fn):
        raise IOError("File {f} doesn't exist in pythondata_misc_opentitan".format(f))
    return fn
